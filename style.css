* /* O asterisco é um seletor universal. Essas configurações serão aplicadas para toda a página */ {
  margin: 0;
  padding: 0;
  /* Por padrão, os navegadores põem medidas em algumas tags. Por isso, é mais interessante resetar o CSS para desativar as medidas padrão. Assim garantimos que as medidas serão as mesmas em qualquer navegador. */
  box-sizing: border-box; /* Serve para definir que a medida do tamanho da caixa comece a partir da borda. Assim o preenchimento interno não interfere na largura definida. Caso contrário, o preenchimento interno faria desaparecer a largura definida. */
}

:root {
  --cor-texto: #fff;
  --bg-url: url(./assets/bg-mobile.jpg);
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(255, 255, 255, 0.02);
  --switch-bg-url: url(./assets/moon-stars.svg);
}

.modo-claro {
  --cor-texto: #000;
  --bg-url: url(./assets/bg-mobile-light.jpg);
  --stroke-color: rgba(0, 0, 0, 0.5);
  --surface-color: rgba(0, 0, 0, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(0, 0, 0, 0.1);
  --switch-bg-url: url(./assets/sun.svg);
}

body {
  /* background-image: url(./assets/bg-mobile.jpg);
   Esta url é uma função que recebe como parâmetro o local da imagem 
  
  background-repeat: no-repeat;
  background-position: top center;
  A imagem possui um ponto central de interesse, que se alinha com o eixo x e o eixo y da página. O valor "center" faz com que a imagem se alinhe ao eixo x da página. Porém, apenas o "center" não é suficiente, pois assim o eixo y também começa a partir do ponto central de interesse da imagem, o que deixa ela cortada. Por isso, deve-se utilizar o valor "top", para que o eixo y comece a partir do topo da página, e não a partir do ponto central de interesse da imagem. 
  
  background-size: cover;
  É possível colocar todas estas informações em apenas uma linha */
  background: var(--bg-url) no-repeat top center/cover; /* Ordem: color, image, repeat, position, size.  Chamamos isso de "shorthand" ou "atalho" */
}

body * /* Esta configuração será aplicada para todos os elementos dentro do body */ {
  font-family: "Inter", sans-serif;
  color: var(--cor-texto);
}

/* Tela do celular */

#container-principal {
  width: 360px; /* Essa medida está presente no design do Figma */
  margin: 56px auto 0px;
  padding: 0px 24px;  
}

/* Profile */

#container-profile {
  text-align: center; /* A imagem foi alinhada dessa forma porque a tag <img> possui, por padrão, o display inline e não é possível centralizar elementos inline com margens automáticas. No entanto, devemos definir a posição pelo elemento pai. Elementos inline aceitam que o seu elemento pai defina em qual posição ele vai ficar. */
  padding: 24px;
}

#container-profile img /* Busca a imagem que está dentro do container-profile */ {
  width: 112px; /* OBS: Geralmente não é necessário definir a altura no CSS, porque a altura deve ser de acordo com o conteúdo. A altura deve ser flexível. */
}

#container-profile p {
  font-weight: 500;
  line-height: 24px; /* Altura da linha */
  margin-top: 8px;
}

/* Switch */

#switch {
  position: relative; /* O posicionamento absoluto do elemento filho vai ser relativo ao posicionamento do elemento pai. */
  width: 64px;
  margin: 4px auto;
}

#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;
  
  /* Forma de centralizar position absolute */
  
  position: absolute;
  top: 50%;
  z-index: 1;
  transform: translateY(-50%);
}

.modo-claro #switch button {
  right: 0;
  left: initial;
}

#switch span {
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 9999px;
}

/* Links */

ul {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding: 24px 0;
}

ul li a{
  display: flex; /* O display flex faz com que os elementos dentro de uma caixa se tornem flexíveis. O gap, que é liberado usando o display flex, cria um espaço entre os elementos. */
  align-items: center; /* Alinha os elementos ao centro eixo y da linha criada pelo display flex */
  justify-content: center; /* Alinha os elementos ao centro eixo x da linha criada pelo display flex */
  padding: 16px 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  border-radius: 8px;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px); /* O prefixo "-webkit-" é importante para tornar uma propriedade css compatível com alguns navegadores que, sem esse prefixo, não seriam compatíveis com a propriedade. */
  text-decoration: none;
  font-weight: 500;
  transition: background 0.2s;
}

ul li a:hover /* pseudo-seletor */{
  background: var(--surface-color-hover);
  border: 1.5px solid var(--cor-texto);
}

#redes-sociais{
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 24px 0;
  font-size: 24px;
}

#redes-sociais a {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;
  transition: background 0.2s;
  border-radius: 50%;
}

#redes-sociais a:hover {
  background: var(--highlight-color);
}

footer {
  padding: 24px 0;
  text-align: center;
  font-size: 14px;
}